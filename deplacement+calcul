PImage fond, clone;
int xU, yU;
boolean  tourEnCours;
int move=2;
int position = 4;
int[] colonne1 = 
{
  0, 0, 0, 0, 1, 0
}
;

void setup() {
  size(480, 640);
  fond =loadImage("planISN.png"); //Relier valeur et image
  clone =loadImage("clone1.png");
  xU=192;
  yU=384;
  tourEnCours=true;
}

void draw() {
  affichage();
  avancer();
  selection();
}

void avancer() {



  if (tourEnCours == true) {
    //for x
    //for y
    //if map[x][y].faction = alliée 

      for ( int i = (position - 1); i > (position - move); i-- ) {
      if ( i >= 0) {
        //if( map[x][i]==0) {
        if ( colonne1[i] == 0) {
          //map[x][i] = map[x][y];
          //map[x][y] = null;
          println("boucle en cours");

          colonne1[i] = 1; //colonne1[position]
          colonne1[position] = 0; //null

          println(position);
        } else if ( colonne1[i] == 0) {
          //case occupée, arret de la boucle

          return;
        }
      } else if ( i < 0) {
        //degats et disparition de l'unité

        return;
      }
    }
    tourEnCours = false;
  }

  printArray(colonne1);
  image(clone, xU, yU, 64, 64); //unité
}

void affichage() {
  image(fond, 0, 0); //fond
  image(fond, 30, 384, 64, 64); //bouton "avancer"
}



void selection() {
  if (mousePressed==true) {
    tourEnCours=collide(mouseX, mouseY, 30, 384, 64, 64);
  }
}


boolean collide(int x, int y, int x2, int y2, int w, int h) {
  if ( x >= x2 && x <= (x2 + w) && y >= y2 && y <= (y2 + h)) {
    return true;
  }
  return false;
}
